{"version":3,"sources":["components/Main.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","pokemon","color","backgroundColor","allname","e","item","preventDefault","console","log","this","history","push","pathname","pokemonType","a","random","min","max","Math","ceil","floor","getRandomInt","stableRandom","sessionStorage","getItem","setItem","fetch","json","list","setState","results","i","onePokemon","className","onClick","hideMenu","map","name","id","style","changeColor","types","type","href","handleClick","src","alt","width","title","Component","Card","location","height","objectFit","weight","abilities","ability","React","App","path","component","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2be249f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemon: [],\n      color: { backgroundColor: \"#000\" },\n      allname: [],\n    };\n  }\n\n  handleClick(e, item) {\n    e.preventDefault();\n    console.log(item);\n    this.props.history.push({\n      pathname: \"/card\",\n      state: { pokemon: item },\n    });\n  }\n\n  changeColor(pokemonType) {\n    switch (pokemonType) {\n      case \"grass\":\n        return { backgroundColor: \"#00ff00\" };\n      case \"normal\":\n        return { backgroundColor: \"#c7bdbd\" };\n      case \"fire\":\n        return { backgroundColor: \"#e30909\" };\n      case \"water\":\n        return { backgroundColor: \"#091fe3\" };\n      case \"fighting\":\n        return { backgroundColor: \"#a35d48\" };\n      case \"flying\":\n        return { backgroundColor: \"#44a2c9\" };\n      case \"poison\":\n        return { backgroundColor: \"#7e44c9\" };\n      case \"ground\":\n        return { backgroundColor: \"#c4b41d\" };\n      case \"rock\":\n        return { backgroundColor: \"#b3ae89\" };\n      case \"bug\":\n        return { backgroundColor: \"#90b574\" };\n      case \"ghost\":\n        return { backgroundColor: \"#edf0f2\" };\n      case \"electric\":\n        return { backgroundColor: \"#fbff00\" };\n      case \"psychic\":\n        return { backgroundColor: \"#fb00ff\" };\n      case \"ice\":\n        return { backgroundColor: \"#0ff\" };\n      case \"dark\":\n        return { backgroundColor: \"#1c120b\", color: \"#fff\" };\n      case \"dragon\":\n        return { backgroundColor: \"#ff6a00\" };\n      case \"steel\":\n        return { backgroundColor: \"#a7d0d9\" };\n      case \"fairy\":\n        return { backgroundColor: \"#f274c8\" };\n      default:\n        return { backgroundColor: \"#000\" };\n    }\n  }\n  hideMenu(e){\n    \n  }\n\n  async componentDidMount() {\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n    let random = getRandomInt(1, 908);\n\n    const stableRandom =\n      sessionStorage.getItem(\"random\") ||\n      sessionStorage.setItem(\"random\", random);\n\n    const allname = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=1118`);\n    const list = await allname.json();\n    this.setState({\n      allname: list.results,\n    });\n\n    for (\n      let i = +stableRandom || random;\n      i < (+stableRandom || random) + 90;\n      i += 3\n    ) {\n      const pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}`);\n      const onePokemon = await pokemon.json();\n      this.setState({\n        pokemon: [...this.state.pokemon, onePokemon],\n      });\n    }\n    \n  }\n\n  render() {\n     \n    return (\n      <div className=\"box\">\n        <div className=\"menu\">\n          <div onClick={(e)=>this.hideMenu(e)}>Меню</div>\n          {this.state.allname.map((item) => (\n            <div className=\"point\" key={item.id}>{item.name}</div>\n          ))}\n        </div>\n        <div className=\"cardbox\">\n          {this.state.pokemon.map((item) => (\n            <div\n              className=\"card\"\n              key={item.id}\n              style={this.changeColor(item.types[0].type.name)}\n            >\n              {item.name}\n              <a href=\"./card\" onClick={(e) => this.handleClick(e, item)}>\n                <img\n                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${item.id}.png`}\n                  alt={item.name}\n                  width=\"100%\"\n                  title={item.types[0].type.name}\n                ></img>\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: {},\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"img item\">\n          <div className=\"name\">{this.props.location.state.pokemon.name}</div>\n          <img\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${this.props.location.state.pokemon.id}.png`}\n            alt={this.props.location.state.pokemon.name}\n            width=\"100%\"\n            height=\"100%\"\n            objectFit=\"cover\"\n          ></img>\n        </div>\n        <div className=\"properties item\">\n          {this.props.location.state.pokemon.weight}----\n          {this.props.location.state.pokemon.height}\n        </div>\n        <div className=\"abilities item\">\n          {this.props.location.state.pokemon.abilities.map((item) => (\n            <div>{item.ability.name}</div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import \"./App.css\";\nimport Main from \"./components/Main\";\nimport Card from \"./components/Card\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/card\" component={Card} />\n        <Route exact path=\"/\" component={Main} />\n        <Redirect to=\"/\" />\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}